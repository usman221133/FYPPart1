@model KnowledgeHub.Models.ModelClasses.PresenterViewerModel

@{
    ViewBag.Title = "Sign Up";
}


<link href="css/bootstrap.css" rel="stylesheet">
<link href="~/Content/SignUp.css" rel="stylesheet">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

@using (Html.BeginForm())
{
    @*<link href="SignUpPage.css" rel="stylesheet" />*@
    <body>

        <div class="container">
            <div class="row">
                <div class="col-sm-4">

                </div>

                <div class="col-sm-4">
                    <div class="signupbox">
                        <img src="~/Image/avatar.png" class="avatar">
                        <h1>Sign Up</h1>
                        <form>

                            @Html.EditorFor(model => model.Presenter_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @type = "text" } })
                            @Html.ValidationMessageFor(x => x.Presenter_Name, "", new { @class = "text-danger" })

                            @Html.EditorFor(model => model.Presenter_Ph_Num, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact No", @type = "text" } })
                            @Html.ValidationMessageFor(x => x.Presenter_Ph_Num, "", new { @class = "text-danger" })

                            @Html.EditorFor(model => model.Presenter_Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email Addrerss", @type = "text" } })
                            @Html.ValidationMessageFor(x => x.Presenter_Email, "", new { @class = "text-danger" })

                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @type = "Password" } })
                            @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })

                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password", @type = "Password" } })
                            @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })

                            <h4>Date of Birth</h4>
                            <div class="dateofbirth">

                                @Html.DropDownListFor(x => x.DOB_Days, new SelectList(ViewBag.Days, "Value", "Text", "0"))
                                @Html.DropDownListFor(x => x.DOB_Months, new SelectList(ViewBag.Months, "Value", "Text", "0"))
                                @Html.DropDownListFor(x => x.DOB_Year, new SelectList(ViewBag.Years, "Value", "Text", "0"))

                            </div>


                            <h4>Gender</h4>
                            @Html.RadioButtonFor(m => m.Presenter_Gender, "Male", new { })
                            <lable style="margin: 0 10px 0 3px;"> Male</lable><br>

                            @Html.RadioButtonFor(m => m.Presenter_Gender, "Female", new { })
                            <lable style="margin 0 10px 5px 3px;">Female</lable>





                            <div class="city">
                                <h4>City</h4>

                                @Html.DropDownListFor(x => x.Presenter_City, new[]{
                            new SelectListItem(){ Text = "Karachi", Value = "Karachi"},
                            new SelectListItem(){ Text = "Lahore", Value = "Lahore"},
                            new SelectListItem(){ Text = "Islamabad", Value = "Islamabad"},
                            new SelectListItem(){ Text = "Multan", Value = "Multan"}
                            }, "Select", new { })
                            </div>

                            <div class="signas">
                                <h4>Sign as</h4>

                                @Html.DropDownListFor(x => x.LoginAs, new[]{
                            new SelectListItem(){ Text = "Student", Value = "Student"},
                            new SelectListItem(){ Text = "Teacher", Value = "Teacher"}
                            }, "Select", new { })
                            </div>

                            <input type="submit" name="" value="Sign Up">
                        </form>
                    </div>
                    
                </div>
            </div>
        </div>
                   @* <div class="signupbox">*@

                       

    </body>


}





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}